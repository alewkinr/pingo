# This is a basic workflow to help you get started with Actions
name: Yandex.Cloud CI/CD pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on release publish
  release:
    types: [published]

  # Triggers the workflow on push to CI/CD config branch
  push:
    branches:
      - feature/actions-config

jobs:
  upload-daily-function:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Deploy Function
        uses: goodsmileduck/yandex-serverless-action@v1
        with:
          token: ${{ secrets.YC_TOKEN }}
          function_id: ${{ secrets.YC_FUNCTION_ID }}
          runtime: 'golang117'
          entrypoint: 'serverless.Handler'
          memory: '256Mb'
          environment: ENVIRONMENT=production,REMOTE_CONFIG_URL=https://static.geo.s3mts.ru/test/templates.yaml,SPACE_HOST=https://space.cloud.mts.ru,SPACE_TOKEN=${{ secrets.SPACE_TOKEN }},TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
          exclude: '.git/**,.github/**,.gitignore'

  upload-archreview-function:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: deploy
        uses: goodsmileduck/yandex-serverless-action@v1
        with:
          token: ${{ secrets.YC_TOKEN }}
          function_id: ${{ secrets.YC_ARCHREVIEW_FUNCTION_ID }}
          runtime: 'golang117'
          entrypoint: 'serverless.Handler'
          memory: '256Mb'
          environment: ENVIRONMENT=production,REMOTE_CONFIG_URL=https://static.geo.s3mts.ru/test/arch-templates.yaml,SPACE_HOST=https://space.cloud.mts.ru,SPACE_TOKEN=${{ secrets.SPACE_TOKEN }},TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }},ROCKETCHAT_HOST=https://mm.mts.ru,ROCKETCHAT_TOKEN=${{ secrets.TELEGRAM_TOKEN }},ROCKETCHAT_USER_ID=${{ secrets.ROCKETCHAT_USER_ID }}
          exclude: '.git/**,.github/**,.gitignore'